# copied from https://github.com/championswimmer/ParkingLot-LLD-Kotlin-MPP/blob/main/.github/workflows/build.yml

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Build (and Release)

on:
  push:
    branches: [ "main" ]
    tags:
      - "v*.*.*"
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write

jobs:
  check_version_tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check Version Tag
        run: |
          echo "Version tag detected: ${{ github.ref }}"
    if: startsWith(github.ref, 'refs/tags/')

  build_wasm_js:
    needs: check_version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :composeApp:wasmJsBrowserDistribution

      - name: Install zip
        uses: montudor/action-zip@v1
      - name: Zip wasm folder
        run: zip -qq -r coshanu_wasm.zip productionExecutable
        working-directory: /home/runner/work/coshanu/coshanu/composeApp/build/dist/wasmJs
#      - name: Tar Artifact
#        run: tar -czf coshanu.nodejs.tgz build/dist/wasmJs/productionExecutable/
      - name: Upload wasm Build
        uses: actions/upload-artifact@v4
        with:
          name: wasm-build
          path: /home/runner/work/coshanu/coshanu/composeApp/build/dist/wasmJs/coshanu_wasm.zip

  build_jvm:
    needs: check_version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :composeApp:packageUberJarForCurrentOS
      - name: Upload JVM Build
        uses: actions/upload-artifact@v4
        with:
          name: jvm-build
          path: /home/runner/work/coshanu/coshanu/composeApp/build/compose/jars/coshanu-linux-x64-*.jar

  build_macos:
    needs: check_version_tag
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          # use :composeApp:packageReleaseDmg for release
          arguments: :composeApp:packageDmg
      - name: Upload MacOS Build
        uses: actions/upload-artifact@v4
        with:
          name: macos-build
          # use /Users/runner/work/coshanu/coshanu/composeApp/build/compose/binaries/main-release/app for release
          path: /Users/runner/work/coshanu/coshanu/composeApp/build/compose/binaries/main/app

  build_linux_deb:
    needs: check_version_tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :composeApp:packageDeb
      - name: Upload Linux Build
        uses: actions/upload-artifact@v4
        with:
          name: linux-build
          path: /home/runner/work/coshanu/coshanu/composeApp/build/compose/binaries/main/deb/coshanu_*_amd64.deb

  build_windows:
    needs: check_version_tag
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 24
        uses: actions/setup-java@v3
        with:
          java-version: '24'
          distribution: 'temurin'
      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: current
          arguments: :composeApp:packageExe
      - name: Upload Windows Build
        uses: actions/upload-artifact@v4
        with:
          name: windows-build
          path: D:\a\coshanu\coshanu\composeApp\build\compose\binaries\main\exe\coshanu-*.exe

#  build_apk:
#    needs: check_version_tag
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v3
#      - name: Set up JDK 24
#        uses: actions/setup-java@v3
#        with:
#          java-version: '24'
#          distribution: 'temurin'
#      - name: Download Keystore
#        run: |
#          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > composeApp/coshanu-android-release.jks
#      - name: Verify Keystore
#        run: ls -la composeApp/coshanu-android-release.jks
#      - name: Build with Gradle
#        uses: gradle/gradle-build-action@v2
#        with:
#          gradle-version: current
#          arguments: :composeApp:packageReleaseApk
#      - name: Upload Apk Build
#        uses: actions/upload-artifact@v4
#        with:
#          name: apk-build
#          path: ''

  # todo add also a build for msi (microsoft installer) for windows

  release:
    needs:
      - "check_version_tag"
      - "build_wasm_js"
      - "build_jvm"
      - "build_macos"
      - "build_linux_deb"
      - "build_windows"
#      - "build_apk"
    runs-on: ubuntu-latest
    steps:
      # remove debug
      #- name: Debug Uploaded Artifacts
      #  run: ls -R /home/runner/work/coshanu/coshanu/composeApp/build/-
      #- name: List Available Artifacts
      #  run: ls -R build/
      - name: List Available Artifacts
        run: |
          echo "Checking build directory..."
          ls -R build/ || echo "Directory does not exist or is empty."
          echo "Debugging complete."

      - name: Download Wasm Build
        uses: actions/download-artifact@v4
        with:
          name: wasm-build
          path: build/wasm

      - name: Download JVM Build
        uses: actions/download-artifact@v4
        with:
          name: jvm-build
          path: build/jvm

      - name: Download MacOS Build
        uses: actions/download-artifact@v4
        with:
          name: macos-build
          path: build/macos

      - name: Download Linux Build
        uses: actions/download-artifact@v4
        with:
          name: linux-build
          path: build/linux

      - name: Download Windows Build
        uses: actions/download-artifact@v4
        with:
          name: windows-build
          path: build/windows

      #- name: Download Apk Build
      #  uses: actions/download-artifact@v4
      #  with:
      #    name: apk-build
      - name: Display downloaded files
        run: ls -R build

      #- name: Rename Releases
      #  run: mv /home/runner/work/coshanu/coshanu/build/macos/macos-build.zip /home/runner/work/coshanu/coshanu/build/macos/coshanu-macos.zip
      #  run: mv build/compose/binaries/main/deb/coshanu_*_amd64.deb build/compose/binaries/main/deb/coshanu_amd64.deb
          # mv build/macos-build/coshanu.kexe build/macos-build/coshanu.macos.bin

      - name: Make Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            /home/runner/work/coshanu/coshanu/build/linux/*
            /home/runner/work/coshanu/coshanu/build/macos/*
            /home/runner/work/coshanu/coshanu/build/windows/*
            /home/runner/work/coshanu/coshanu/build/jvm/*
            /home/runner/work/coshanu/coshanu/build/wasm/*
#            /home/runner/work/coshanu/coshanu/build/apk/*
